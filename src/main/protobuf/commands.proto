syntax = "proto3";

import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE
  package_name: "factdb.protocol"
  flat_package: true
};

message Ack {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";
}

message Nack {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";
}

message HelloWorld {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string msg = 1;
}

message MVCCVersion {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string k = 1;
    uint64 v = 2;
    string version = 3;
}

message Transaction {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
    repeated string keys = 2;

    repeated MVCCVersion rs = 3;
    repeated MVCCVersion ws = 4;

    repeated string partitions = 5;
    string coordinator = 6;
}

message Batch {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
    repeated Transaction txs = 2;
    string coordinator = 3;
    repeated string partitions = 4;
}

message Epoch {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string epoch = 1;
    //repeated Batch batches = 2;
    repeated Transaction txs = 2;
}

message BatchDone {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
    repeated string aborted = 2;
    repeated string committed = 3;
}

message BatchFinished {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
    repeated string txs = 2;
}

message BatchResponse {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
    bool ok = 2;
}

message PartitionExecute {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
}

message PartitionRelease {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    string id = 1;
    repeated string txs = 2;
}

message ReadRequest {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    repeated string keys = 1;
}

message ReadResponse {
    option (scalapb.message).extends = "factdb.Command";
    option (scalapb.message).companion_extends = "factdb.Command";

    repeated MVCCVersion values = 1;
}

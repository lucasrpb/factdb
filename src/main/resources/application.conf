akka {
  log-dead-letters-during-shutdown = off
  log-dead-letters = 0

  actor {
    provider = "cluster"

    #serialize-messages = on
    #serialize-creators = on

    allow-java-serialization = off

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
      myown = "factdb.FactDBSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = none

      "java.lang.String" = proto
      "java.lang.Boolean" = proto
      "java.lang.Integer" = proto
      "java.lang.Long" = proto
      "java.lang.Double" = proto

      "com.google.protobuf.Message" = proto
      "factdb.protocol.Ack" = myown
      "factdb.protocol.Nack" = myown
      "factdb.protocol.HelloWorld" = myown
    }

  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://factdb@127.0.0.1:2551",
      "akka.tcp://factdb@127.0.0.1:2552"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s
  }
}

# Enable metrics extension in akka-cluster-metrics.
#akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
akka.extensions=["akka.cluster.pubsub.DistributedPubSub", "akka.cluster.client.ClusterClientReceptionist"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native